name: Java CI with Gradle

on:
  push:
    branches: [ "main" , "dev" ]
  pull_request:
    branches: [ "main" , "dev" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'


    - name: make application-prod.yml
      run: |
        cd ./src/main/resources
        touch ./application-prod.yml
        #echo "${{ secrets.APPLICATION_PROD }}" > ./application-prod.yml
        run: |
        cd ./src/main/resources
        echo "server.shutdown = graceful\n\
        server.port = 9090\n\
        spring.mvc.pathmatch.matching-strategy=ant_path_matcher\n\
        spring.datasource.driver-class-name= org.h2.Driver\n\
        spring.datasource.url= jdbc:h2:~/holiday\n\
        spring.datasource.username= sa\n\
        spring.datasource.password= 1234\n\
        spring.jpa.show-sql=true\n\
        spring.jpa.hibernate.ddl-auto=create-drop\n\
        spring.h2.console.enabled=true\n\
        spring.h2.console.path=/h2-console\n\
        spring.jpa.properties.hibernate.format_sql=true\n\
        logging.level.org.hibernate.type.descriptor.sql=trace\n\
        jwt.secret-key= Z29nby10bS1zZXJ2ZXItZGxyamVvYW9yb3JodG9kZ290c3Atam9vbmdhbmduaW0teWVvbHNpbWhpaGFsZ2VveW8K\n\
        ACCESS_TOKEN_EXPIRE_TIME = 864000\n\
        REFRESH_TOKEN_EXPIRE_TIME = 604800000\n\
        oauth.kakao.url.auth = https://kauth.kakao.com\n\
        oauth.kakao.url.api = https://kapi.kakao.com\n\
        oauth.kakao.client-id = a153082dc35812389c5b9743c74f1c1b\n\
        oauth.kakao.client-secret=1N8JcQUXHQA8QUNa6om2aTTL1Ix7ZfBl" > ./application-prod.yml
            


    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build with Gradle
      run: ./gradlew build -x test

    - name: Docker build
      run: |
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
        docker build -t app .
        docker tag app ${{ secrets.DOCKER_USERNAME }}/tookdocker:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/tookdocker:latest

    - name: Deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }} # EC2 인스턴스 퍼블릭 DNS
        username: ubuntu
        key: ${{ secrets.PRIVATE_KEY }} # pem 키
        # 도커 작업
        script: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/tookdocker:latest
          docker stop $(docker ps -a -q)
          docker run -d --log-driver=syslog -p 9090:9090 ${{ secrets.DOCKER_USERNAME }}/tookdocker:latest
          docker rm $(docker ps --filter 'status=exited' -a -q)
          docker image prune -a -f
